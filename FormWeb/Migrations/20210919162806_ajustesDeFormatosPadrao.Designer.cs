// <auto-generated />
using FormWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FormWeb.Migrations
{
    [DbContext(typeof(FormWebContext))]
    [Migration("20210919162806_ajustesDeFormatosPadrao")]
    partial class ajustesDeFormatosPadrao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FormWeb.Models.Cidade", b =>
                {
                    b.Property<int>("IdCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEstadoCidade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCidade");

                    b.HasIndex("IdEstadoCidade");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("FormWeb.Models.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEstadoPais")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.HasIndex("IdEstadoPais");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("FormWeb.Models.Nacionalidade", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPais");

                    b.ToTable("Nacionalidade");
                });

            modelBuilder.Entity("FormWeb.Models.Pessoa", b =>
                {
                    b.Property<int>("idPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdNacionalidade")
                        .HasColumnType("int");

                    b.Property<string>("cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPessoa");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdNacionalidade");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("FormWeb.Models.Cidade", b =>
                {
                    b.HasOne("FormWeb.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstadoCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("FormWeb.Models.Estado", b =>
                {
                    b.HasOne("FormWeb.Models.Nacionalidade", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("IdEstadoPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("FormWeb.Models.Pessoa", b =>
                {
                    b.HasOne("FormWeb.Models.Cidade", "cidade")
                        .WithMany("Pessoas")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormWeb.Models.Estado", "estado")
                        .WithMany("Pessoas")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormWeb.Models.Nacionalidade", "nacionalidade")
                        .WithMany("Pessoas")
                        .HasForeignKey("IdNacionalidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cidade");

                    b.Navigation("estado");

                    b.Navigation("nacionalidade");
                });

            modelBuilder.Entity("FormWeb.Models.Cidade", b =>
                {
                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("FormWeb.Models.Estado", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("FormWeb.Models.Nacionalidade", b =>
                {
                    b.Navigation("Estados");

                    b.Navigation("Pessoas");
                });
#pragma warning restore 612, 618
        }
    }
}
